<div class="container">
  <div class="row metro breadcrumbs">
    <div class="col-sm-12">
      <h2>
        <a href="/admin"><%= __('Admin') %></a> > 
        <a href="javascript:;"><%= __('Database access') %></a>
      </h2>
    </div>
  </div>



  <div class="row">
    <div class="col-md-6">

    <% var model = sails.models['item']; %>



    <div class="database-list metro">
      <input type="hidden" id="MODEL_ID" value="<%= model._tableName %>"/>
      <fieldset>
        <legend>
        Database Model :: <b><%= model._tableName %></b>
        <a href="javascript:;" data-model="<%= model._tableName %>" class="create-item-link pull-right">
          <%= __('new') %> <%= model._tableName %> 
          <i class="fa fa-plus-circle"></i>
        </a>
        </legend>
      </fieldset>

      <div data-role="listview" class="listview-outlook" id="LIST_CONTAINER">

      </div>
    </div>




    </div>
  </div>
</div>



<script type="text/x-handlebars-template" id="__ITEMS__TEMPLATE__">
{{#each items}}
  <a href="javascript:;" class="list list-item" data-id="{{id}}" data-model="{{../model}}">
    <div class="list-content">
      <span class="list-title">{{title}}</span>
      {{!-- <span class="list-subtitle">Created by {{createdBy}} at {{formatDate createdAt}}</span> --}}
      {{!-- <span class="list-subtitle">Updated by {{updatedBy}} at {{formatDate updatedAt}}</span> --}}
      <span class="list-remark"></span>
    </div>
  </a>
{{/each}}
</script>


<script type="text/x-handlebars-template" class="__DELETE_ITEM_CONFIRMATION__" lang="fr">
  Etes vous certain de vouloir supprimer cette utilisateur?
</script>

<script type="text/x-handlebars-template" class="__DELETE_ITEM_CONFIRMATION__" lang="en">
  Are you sure you want to delete this user?
</script>



<%- partial('./partials/modal.item.create.ejs') %>
<%- partial('./partials/modal.item.edit.ejs') %>



<script type="text/javascript">
window.addEventListener('load', function () {
  
  var model = $('#MODEL_ID').val();


  // Generate the list
  $('body').addClass('loading');
  $.get('/' + model, { sort: { updatedAt: 'ASC'} }, function (items) {
    var source = $('#__ITEMS__TEMPLATE__').html();
    var template = Handlebars.compile(source);
    $('#LIST_CONTAINER').html(template({ items: items, model: model }));
    $('body').removeClass('loading');
  });


  $('body').on('click', '.create-item-link', function (e) {
    e.preventDefault();
    var model = $(this).attr('data-model');
    $.get('/_api/database/model/', { model: model }, function (response) {
      $modal = $('#ModalItemCreate')
      $modal.html(Handlebars.compile($('#__ITEM_CREATE_TEMPLATE__').html())({
        inputs: response.inputs,
        model: model,
      }));
      $modal.modal('show');
    })
  })



  $('body').on('click', '#ItemCreateButton', function (e) {
    e.preventDefault();
    $form = $('#ItemCreateForm');
    if ($form.parsley().validate()) {
      var values = {};
      $form.find('[name]').each(function() {
        values[this.name] = $(this).val();
      });
      $.post('/' + $form.attr('data-model'), values, function (response) {
        window.location.reload();
      })
    }
  })


  $('body').on('click', '.list-item', function (e) {
    e.preventDefault();
    var $item = $(this);
    var itemId = $(this).attr('data-id');
    var itemModel = $(this).attr('data-model');
    $.get('/' + itemModel + '/' + itemId, function (item) {
      $.get('/_api/database/model', { model: itemModel }, function (response) {
        var values = {};
        for (var prop in item) {
          if (item.hasOwnProperty(prop)) {
            values[prop] = {
              value: item[prop],
              input: response.inputs[prop]
            }
          }
        }
        $modal = $('#ModalItemEdit')
        $modal.html(Handlebars.compile($('#__ITEM_EDIT_TEMPLATE__').html())({
          values: values,
          model: itemModel,
        }));
        $modal.modal('show');
      })
    })
  })



  $('body').on('click', '#ItemEditButton', function (e) {
    e.preventDefault();
    $form = $('#ItemEditForm');
    if ($form.parsley().validate()) {
      var values = {};
      $form.find('[name]').each(function() {
        values[this.name] = $(this).val();
      });
      $.ajax({
        type: 'PUT',
        url: '/' + $form.attr('data-model') + '/' + $form.attr('data-id'), 
        data: values, 
        success: function (response) {
          window.location.reload();
        }
      });
    }
  });



  $('body').on('click', '#ItemDeleteButton', function (e) {
    e.preventDefault();
    $('.modal').modal('hide');
    $link = $(this);
    var confirm = new qsi.confirm();
    confirm.setMessage('.__DELETE_ITEM_CONFIRMATION__');
    confirm.setConfirm(function () {
      $.ajax({
        type: 'DELETE',
        url: '/' + $link.attr('data-model') + '/' + $link.attr('data-id'),
        success: function (data) {
          window.location.reload();
        }
      });
    });
    confirm.show();
  })



})






</script>






